{"version":3,"sources":["data/index.ts","API/index.ts","pages/components/Cards/CardComponents.ts","pages/components/Cards/Card.tsx","pages/components/Nav/NavComponents.ts","pages/components/Nav/Nav.tsx","pages/GamesComponents.ts","pages/Games.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dateInputFormat","dateOutPutFormat","getDate","daysFromDate","date","moment","format","add","formatDate","local","formatTime","time","request","method","url","a","params","fetch","response","json","console","log","message","opt","season","seasonScheduleYear","teams","daysGames","todaysGames","games","forEach","game","hTeamFullname","league","standard","filter","team","teamId","hTeam","fullName","vTeamFullname","vTeam","hTeamScore","score","vTeamScore","gameId","startTimeUTC","push","key","StartTime","styled","div","p","GameDetails","StyledCard","StyledRow","HomeTeam","AwayTeam","Separator","Card","props","Nav","Date","NavButton","button","DateNav","onClick","navigation","disabled","GamesContainer","PageTitle","Spinner","Loader","Page","Message","Games","state","searching","currentDate","changeView","bind","getGames","this","setState","getDaysGames","then","direction","type","color","height","width","length","map","title","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6693a73e.chunk.js","sourcesContent":["import moment from 'moment';\nconst dateInputFormat = \"YYYYMMDD\"\nconst dateOutPutFormat = \"DD MM YYYY\"\nconst timeFormat = \"HH:mm\"\n\nexport function getDate(daysFromDate: number, date = moment().format(dateInputFormat)): string{\n    if (daysFromDate === 0) return date\n    else return moment(date).add(daysFromDate, \"days\").format(dateInputFormat)\n}\n\nexport function formatDate(date: string, format=dateOutPutFormat){\n    return moment(date).local().format(format);\n}\n\nexport function formatTime(time: string){\n    return moment(time).local().format(timeFormat)\n}","import { formatTime } from \"../data\";\r\nimport { Game } from \"../interface\";\r\n\r\nexport async function request(method: string, url: string, params = \"\") {\r\n    try {\r\n        let response = await fetch(url + params, {\r\n            method: method,\r\n        })\r\n        return response.json()\r\n    } catch (error) {\r\n        console.log(`Issue with fetch: ${error.message}`);\r\n    }\r\n}\r\n\r\nexport async function getDaysGames(date: string): Promise<Game[]> {\r\n    const opt = await request(\"GET\", \"https://data.nba.net/10s/prod/v1/today.json\")\r\n    const season = opt.seasonScheduleYear \r\n    const teams = await request(\"GET\", `https://data.nba.net/10s/prod/v2/${season}/teams.json`)\r\n    const daysGames = await request(\"GET\", `https://data.nba.net/10s/prod/v1/${date}/scoreboard.json`)\r\n    let todaysGames: Game[]=[]\r\n    daysGames.games.forEach((game: any) => {\r\n        const hTeamFullname = teams.league.standard.filter((team: any) => team.teamId === game.hTeam.teamId)[0].fullName\r\n        const vTeamFullname = teams.league.standard.filter((team: any) => team.teamId === game.vTeam.teamId)[0].fullName\r\n        const hTeamScore = game.hTeam.score\r\n        const vTeamScore = game.vTeam.score\r\n        const gameId = game.gameId\r\n        const time = formatTime(game.startTimeUTC);\r\n        todaysGames.push({hTeam: {fullName:hTeamFullname, score: hTeamScore}, vTeam: {fullName: vTeamFullname, score: vTeamScore}, date:time, key:gameId})\r\n    })\r\n    return todaysGames\r\n}","import styled from 'styled-components';\n\nexport const StyledCardsContainer = styled.div`\n  background-color: #3d424d;\n  font-size: calc(8px + 2vmin);\n  display: flex;\n  flex-direction: column;\n`\nexport const StartTime = styled.p`\n    margin: 0;\n`;\n\nexport const GameDetails = styled.div`\n    text-align: center;\n`;\n\nexport const StyledCard = styled.div`\n  background-color: #2d3038;\n  padding: 10px 0;\n  width: 100%;\n  line-height: calc(20px + 2vmin);\n  font-size: calc(8px + 2vmin);\n  border-radius: 10px;\n  box-shadow: 1px 1px 1px 1px #0e1529;\n  margin: 5px 0;\n`;\n\nexport const StyledRow = styled.div`\n  display: flex; \n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const HomeTeam = styled.div`\n  text-align: right;\n  width: 47%;\n  text-shadow: 2px 2px #0e1529;\n`;\n\nexport const AwayTeam = styled.div`\ntext-align: left;\nwidth: 47%;\ntext-shadow: 2px 2px #0e1529;\n`;\n\nexport const Separator = styled.div`\n  width: 4%;\n  text-align: center;\n  font-weight: 800;\n  font-size: calc(3px + 2vmin);\n`;","import React from 'react';\nimport { Game } from '../../../interface';\nimport { StyledCard, StyledRow, HomeTeam, AwayTeam, Separator, GameDetails, StartTime } from './CardComponents';\n\nconst Card = (props: Game) => {\n  function gameDetails() {\n    if (props.hTeam.score == \"\") {\n      return (\n        <GameDetails>\n          <StartTime>{props.date}</StartTime>\n        </GameDetails>\n      )\n    }\n    else {\n      return (\n        <StyledRow>\n          <HomeTeam>{props.hTeam.score}</HomeTeam>\n          <Separator>-</Separator>\n          <AwayTeam>{props.vTeam.score}</AwayTeam>\n        </StyledRow>\n      );\n    }\n  }\n  return (\n    <StyledCard>\n      <StyledRow>\n        <HomeTeam>{props.hTeam.fullName}</HomeTeam>\n        <Separator>vs</Separator>\n        <AwayTeam>{props.vTeam.fullName}</AwayTeam>\n      </StyledRow>\n      {gameDetails()}\n    </StyledCard>\n  )\n}\nexport default Card;","import styled from 'styled-components';\n\nexport const Nav = styled.div`\n  width: fit-content;\n  margin: auto;\n  display: flex; \n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Date = styled.p`\n  font-size: calc(4px + 2vmin);\n  vertical-align: middle;\n  margin: 10px;\n`;\n\nexport const NavButton = styled.button`\n  margin: 10px;\n  font-size: calc(10px + 2vmin);\n  font-weight: bold;\n  background-color: #2d3038;\n  color: white;\n  border-radius: 20%;\n`;","import React from 'react';\nimport { formatDate } from '../../../data';\nimport { Navigation } from '../../../interface';\nimport { Nav, NavButton, Date } from './NavComponents';\n\nconst DateNav = (props: Navigation) => {\n  return (\n    <Nav>\n    <NavButton onClick={() => props.navigation(-1)} disabled={props.disabled}>&#10594;</NavButton>\n    <Date>{formatDate(props.date)}</Date>\n    <NavButton onClick={() => props.navigation(1)} disabled={props.disabled}>&#10596;</NavButton>\n  </Nav>\n  )\n}\nexport default DateNav;","import styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\n\nexport const GamesContainer = styled.div`\n    background-color: #3d424d;\n    font-size: calc(8px + 2vmin);\n    color: white;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const PageTitle = styled.div`\n    margin: 10px auto;\n    text-align: center;\n    font-size: calc(13px + 2vmin);\n`;\n\nexport const Spinner = styled(Loader)`\n    width: fit-content;\n    margin: 20px auto;\n`;\n\nexport const Page = styled.div`\n    color: white;\n    max-width: 600px;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const Message = styled.p`\n    width: fit-content;\n    margin: 10px auto;\n`;","import React from 'react';\nimport { getDaysGames } from '../API'\nimport { getDate } from '../data';\nimport Card from './components/Cards/Card'\nimport Nav from './components/Nav/Nav'\nimport { GamesProps, GamesPageStates } from '../interface';\nimport { GamesContainer, Page, PageTitle, Spinner, Message } from './GamesComponents';\n\nclass Games extends React.Component<GamesProps, GamesPageStates>{\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      searching: true,\n      games: [],\n      currentDate: getDate(0)\n    };\n    this.changeView = this.changeView.bind(this);\n    this.getGames()\n  }\n  getGames() {\n    this.setState({\n      searching: true\n    })\n    getDaysGames(this.state.currentDate).then(daysGames => {\n      this.setState({\n        games: daysGames,\n        searching: false\n      })\n    })\n  }\n  changeView(direction: number) {\n    this.setState({\n      currentDate: getDate(direction, this.state.currentDate)\n    },\n      this.getGames\n    )\n  }\n  games() {\n    if (this.state.searching) {\n      return (\n        <Spinner type=\"Circles\" color=\"white\" height={80} width={80} />\n      )\n    }\n    else {\n      if (this.state.games.length != 0) {\n        return (\n          <GamesContainer>\n            {this.state.games.map(game =>\n              <Card\n                vTeam={game.vTeam}\n                hTeam={game.hTeam}\n                key={game.key}\n                date={game.date}\n              />\n            )}\n          </GamesContainer>\n        )\n      }\n      else {\n        return (\n          <Message> No Games Today :(</Message>\n        )\n      }\n    }\n  }\n  render() {\n    return (\n      <Page>\n        <PageTitle>\n          {this.props.title}\n        </PageTitle>\n        <Nav\n          navigation={this.changeView}\n          date={this.state.currentDate}\n          disabled={this.state.searching}\n        />\n        {this.games()}\n      </Page>\n    );\n  }\n}\n\nexport default Games;","import React from 'react';\nimport './App.css';\nimport { IAppProps } from './interface';\nimport Games from './pages/Games';\n\nconst App = (props: IAppProps)=> {\n    return (\n      <Games\n        title=\"NBA Games\"\n        >\n      </Games>\n    );\n}\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App \n        title=\"NBA App\"\n    />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}