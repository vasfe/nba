{"version":3,"sources":["components/Navbar.js","components/StyledComponents.js","components/Stats.js","components/PlayerCard.js","store/actions/stats.js","API/index.js","store/reducers/stats.js","pages/Stats.js","components/DateNav.js","components/GameCard.js","store/actions/games.js","store/reducers/games.js","pages/Games.js","store/store.js","App.js","index.js"],"names":["Nav","styled","nav","NavLink","Link","Navbar","exact","to","activeClassName","Spinner","Loader","StyledSelect","Select","Container","div","PageTitle","h1","Page","Message","p","StyledCard","Row","LeftText","RightText","Separator","Header","Header2","FurtherDetails","ColumnsContainer","StatCard","props","useCollapse","getCollapseProps","getToggleProps","isExpanded","title","stats","map","stat","PlayerCard","once","player","name","Object","entries","careerStats","seasonStats","season","SET_STATS","SET_PLAYERS","SET_SEARCHING","setStats","payload","type","request","method","url","a","params","fetch","response","json","console","log","message","getGamesForDay","date","opt","seasonScheduleYear","teams","daysGames","games","reduce","game","gameDate","Date","startTimeUTC","push","hTeam","fullName","league","standard","filter","team","teamId","score","seriesWin","vTeam","homeStartDate","time","toTimeString","split","key","gameId","startTimeTBD","isStartTimeTBD","arena","city","isActiveGame","isGameActivated","isEnded","undefined","endTimeUTC","clock","period","current","getPlayerStats","id","playersStats","careerSummary","regularSeason","seasonYear","total","getPlayers","playersResponse","players","firstName","lastName","personId","initialState","searching","Stats","useSelector","state","dispatch","useDispatch","useEffect","getState","content","options","label","value","onChange","option","placeholder","color","DatePicker","NavButton","button","DateNav","onClick","onArrowsClick","disabled","selected","clearIcon","dateFormat","GameDetails","ActiveGameDetails","Card","gameHeader","gameDetails","SET_DATE","SET_GAMES","SET_LOADING","setDate","setGames","loading","Games","toISOString","replace","newDate","isNaN","parse","toString","dayDifference","Number","getDate","length","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","basename","process","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3aaac983.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #26282f;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst NavLink = styled(Link)`\r\n  letter-spacing: .6px;\r\n  color: white;\r\n  font-weight: 800;\r\n  text-decoration: none;\r\n  padding: 15px 25px;\r\n  cursor: pointer;\r\n  &.active {\r\n    border-bottom: 4px solid white ;\r\n  } \r\n`;\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <Nav >\r\n            <NavLink exact to={'/'} activeClassName=\"active\">\r\n                {\"Games\"}\r\n            </NavLink>\r\n            <NavLink exact to={'stats'} activeClassName=\"active\">\r\n                {\"Stats\"}\r\n            </NavLink>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import styled from 'styled-components';\r\nimport Loader from 'react-loader-spinner';\r\nimport Select from 'react-select';\r\n\r\nexport const Spinner = styled(Loader)`\r\n    margin: 20px auto;\r\n    color: white;\r\n    height: 80px;\r\n    width: 80px; \r\n`;\r\n\r\nexport const StyledSelect = styled(Select)`\r\n    color: black;\r\n    min-width:300px;\r\n    font-size: 18px;\r\n    margin: 10px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    background-color: #3d424d;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n`;\r\n\r\nexport const PageTitle = styled.h1`\r\n    margin: 10px;\r\n    font-weight: 500;\r\n`;\r\n\r\nexport const Page = styled.div`\r\n    color: white;\r\n    max-width: 700px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Message = styled.p`\r\n    width: fit-content;\r\n    margin: 10px auto;\r\n    font-size: 15px;\r\n`;\r\n\r\nexport const StyledCard = styled.div`\r\n  background-color: #2d3038;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 1px 1px 1px #0e1529;\r\n  margin: 5px 10px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: flex; \r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const LeftText = styled.div`\r\n  text-align: right;\r\n  width: 47%;\r\n`;\r\n\r\nexport const RightText = styled.div`\r\n  text-align: left;\r\n  width: 47%;\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n  width: 4%;\r\n  font-weight: 600;\r\n  font-size: calc(4px + 1vmin);\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  font-size: calc(16px + 1vmin);\r\n  text-shadow: 2px 2px #0e1529;\r\n  line-height: calc(30px + 1vmin);\r\n`;\r\n\r\nexport const Header2 = styled.div`\r\n  font-size: calc(14px + 1vmin);\r\n  line-height: calc(30px + 1vmin);\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const FurtherDetails = styled.div`\r\n  font-size: calc(4px + 1.5vmin);\r\n  line-height: calc(20px + 1vmin);\r\n`;","import React from 'react';\r\nimport { Row, LeftText, Header2, RightText, Separator, FurtherDetails } from './StyledComponents';\r\nimport { IoIosArrowDropdown, IoIosArrowDropup } from \"react-icons/io\";\r\nimport useCollapse from 'react-collapsed';\r\nimport styled from 'styled-components';\r\n\r\nconst ColumnsContainer = styled.div`\r\n   display: flex;\r\n   flex-direction: column;\r\n   flex-wrap: wrap;\r\n   max-height: 320px;\r\n   margin-bottom: 5px;\r\n`;\r\n\r\nconst StatCard = (props) => {\r\n    const { getCollapseProps, getToggleProps, isExpanded } = useCollapse();\r\n    return (\r\n        <div>\r\n            <Header2>{props.title}</Header2>\r\n            <div  {...getCollapseProps()}>\r\n                <ColumnsContainer>\r\n                    {props.stats.map(stat =>\r\n                        <Row key={stat[0]}>\r\n                            <LeftText>\r\n                                <FurtherDetails>{stat[0]}</FurtherDetails>\r\n                            </LeftText>\r\n                            <Separator>:</Separator>\r\n                            <RightText>\r\n                                <FurtherDetails>{stat[1]}</FurtherDetails>\r\n                            </RightText>\r\n                        </Row>\r\n                    )}\r\n                </ColumnsContainer>\r\n            </div>\r\n            {isExpanded ? <IoIosArrowDropup {...getToggleProps()} />\r\n                : <IoIosArrowDropdown {...getToggleProps()} />\r\n            }\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatCard;","import React from 'react';\r\nimport { StyledCard, Header } from './StyledComponents';\r\nimport LazyLoad from 'react-lazyload';\r\nimport Stats from \"./Stats\"\r\n\r\nconst PlayerCard = (props) => {\r\n    return (\r\n        <LazyLoad once>\r\n            <StyledCard>\r\n                <Header>{props.player.name}</Header>\r\n                <hr />\r\n                <Stats\r\n                    title=\"Career Stats\"\r\n                    stats={Object.entries(props.player.careerStats)}\r\n                />\r\n                {props.player.seasonStats.map(season =>\r\n                    <Stats\r\n                        key={season.season}\r\n                        title={season.season}\r\n                        stats={Object.entries(season.stats)}\r\n                    />\r\n                )}\r\n            </StyledCard>\r\n        </LazyLoad>\r\n    );\r\n}\r\n\r\nexport default PlayerCard;","export const SET_STATS = \"SET_STATS\"\r\nexport const SET_PLAYERS = \"SET_PLAYERS\"\r\nexport const SET_SEARCHING = \"SET_SEARCHING\"\r\n\r\nexport function setSearching(payload) {\r\n    return { type: \"SET_SEARCHING\", payload }\r\n};\r\n\r\nexport function setPlayers(payload) {\r\n    return { type: \"SET_PLAYERS\", payload }\r\n};\r\n\r\nexport function setStats(payload) {\r\n    return { type: \"SET_STATS\", payload }\r\n};","async function request(method, url, params = \"\") {\r\n    try {\r\n        let response = await fetch(url + params, {\r\n            method: method\r\n        })\r\n        return response.json()\r\n    } catch (error) {\r\n        console.log(`Issue with fetch: ${error.message}`);\r\n    }\r\n}\r\n\r\nexport async function getGamesForDay(date) {\r\n    const opt = await request(\"GET\", \"https://data.nba.net/10s/prod/v1/today.json\")\r\n    const season = opt.seasonScheduleYear\r\n    const teams = await request(\"GET\", `https://data.nba.net/10s/prod/v2/${season}/teams.json`)\r\n    const daysGames = await request(\"GET\", `https://data.nba.net/10s/prod/v1/${date}/scoreboard.json`)\r\n    return daysGames.games.reduce((games, game) => {\r\n        const gameDate = new Date(game.startTimeUTC)\r\n        games.push(\r\n            {\r\n                hTeam: {\r\n                    fullName: teams.league.standard.filter((team) => team.teamId === game.hTeam.teamId)[0].fullName,\r\n                    score: game.hTeam.score,\r\n                    seriesWin: game.hTeam.seriesWin//change before playoffs\r\n                },\r\n                vTeam: {\r\n                    fullName: teams.league.standard.filter((team) => team.teamId === game.vTeam.teamId)[0].fullName,\r\n                    score: game.vTeam.score,\r\n                    seriesWin: game.vTeam.seriesWin//change before playoffs\r\n                },\r\n                date: game.homeStartDate,\r\n                time: `${gameDate.toTimeString().split(':')[0]}:${gameDate.toTimeString().split(':')[1]}`,\r\n                key: game.gameId,\r\n                gameId: game.gameId,\r\n                startTimeTBD: game.isStartTimeTBD,\r\n                arena: `${game.arena.name}, ${game.arena.city} `,\r\n                isActiveGame: game.isGameActivated,\r\n                isEnded: ((game.endTimeUTC == undefined) ? false : true),\r\n                clock: game.clock,\r\n                period: game.period.current\r\n            })\r\n        return games\r\n    }, [])\r\n}\r\n\r\nexport async function getPlayerStats(player) {\r\n    const opt = await request(\"GET\", \"https://data.nba.net/10s/prod/v1/today.json\")\r\n    const season = opt.seasonScheduleYear\r\n    const playersStats = await request(\"GET\", `https://data.nba.net/10s/prod/v1/${season}/players/${player.id}_profile.json`)\r\n    let careerStats = playersStats.league.standard.stats.careerSummary;\r\n    const seasonStats = playersStats.league.standard.stats.regularSeason.season.map(season =>\r\n        ({ season: season.seasonYear, stats: season.total }))\r\n    return { name: player.name, careerStats: careerStats, seasonStats: seasonStats };\r\n}\r\n\r\nexport async function getPlayers() {\r\n    const opt = await request(\"GET\", \"https://data.nba.net/10s/prod/v1/today.json\")\r\n    const season = opt.seasonScheduleYear\r\n    const playersResponse = await request(\"GET\", `https://data.nba.net/prod/v1/${season}/players.json`)\r\n    return playersResponse.league.standard.reduce((players, player) => {\r\n        players.push({ name: `${player.firstName} ${player.lastName}`, id: player.personId })\r\n        return players\r\n    }, []);\r\n}","import { SET_PLAYERS, SET_STATS, SET_SEARCHING, setPlayers, setStats, setSearching } from \"../actions/stats\";\r\nimport { getPlayers, getPlayerStats } from \"../../API\";\r\n\r\nconst initialState = {\r\n  stats: [],\r\n  players: [],\r\n  searching: false\r\n};\r\n\r\nexport function statsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_PLAYERS:\r\n      return { ...state, players: action.payload }\r\n    case SET_STATS:\r\n      return { ...state, stats: [action.payload, ...state.stats], searching: false }\r\n    case SET_SEARCHING:\r\n      return { ...state, searching: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport const loadPlayers = () => async (dispatch, getState) => {\r\n  const players = await getPlayers()\r\n  dispatch(setPlayers(players))\r\n}\r\n\r\nexport const loadStats = (player) => async (dispatch, getState) => {\r\n  dispatch(setSearching(true))\r\n  const stats = await getPlayerStats(player)\r\n  dispatch(setStats(stats))\r\n}","import React, { useEffect } from 'react';\r\nimport { Spinner, Row, Page, PageTitle, Container, StyledSelect as Select } from '../components/StyledComponents';\r\nimport Card from \"../components/PlayerCard\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { loadPlayers, loadStats } from '../store/reducers/stats';\r\n\r\nconst Stats = () => {\r\n\r\n    const players = useSelector(state => state.stats.players);\r\n    const searching = useSelector(state => state.stats.searching);\r\n    const stats = useSelector(state => state.stats.stats);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadPlayers())\r\n    }, []);\r\n\r\n    const handleSearch = (option) => {\r\n        dispatch(loadStats({ name: option.label, id: option.value }))\r\n    }\r\n\r\n    const content =\r\n        <Container>\r\n            {stats.map(stat =>\r\n                <Card\r\n                    player={stat}\r\n                    key={stat.name}\r\n                />\r\n            )}\r\n        </Container>\r\n    return (\r\n        <Page>\r\n            <PageTitle>NBA Stats</PageTitle>\r\n            <Row>\r\n                <Select\r\n                    options={players.map(player => ({ label: player.name, value: player.id }))}\r\n                    onChange={handleSearch}\r\n                    placeholder=\"Browse Players\"\r\n                />\r\n            </Row>\r\n            {searching && <Spinner type=\"Circles\" color=\"white\" />}\r\n            {content}\r\n        </Page>\r\n    )\r\n}\r\nexport default Stats;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Nav = styled.div`\r\n  display: flex; \r\n  align-items: center;\r\n`;\r\n\r\nconst Date = styled(DatePicker)`\r\n  cursor: pointer;\r\n  background: transparent;\r\n  color: white;\r\n  border-radius: 5px;\r\n  width: 110px;\r\n  padding: 5px;\r\n  font-size: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nconst NavButton = styled.button`\r\n  margin: 10px;\r\n  font-size: 25px;\r\n  background-color: #2d3038;\r\n  color: white;\r\n  border-radius: 20%;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst DateNav = (props) => {\r\n  return (\r\n    <Nav>\r\n      <NavButton\r\n        onClick={() => props.onArrowsClick(-1)}\r\n        disabled={props.disabled}\r\n      >\r\n        &#10594;\r\n      </NavButton>\r\n      <Date\r\n        onChange={props.onChange}\r\n        selected={props.date}\r\n        clearIcon={null}\r\n        dateFormat=\"dd/MM/yyyy\"\r\n      />\r\n      <NavButton\r\n        onClick={() => props.onArrowsClick(1)}\r\n        disabled={props.disabled}\r\n      >\r\n        &#10596;\r\n      </NavButton>\r\n    </Nav>\r\n  )\r\n}\r\nexport default DateNav;","import React from 'react';\r\nimport { StyledCard, Row, LeftText, RightText, Separator, Header, FurtherDetails } from './StyledComponents';\r\nimport LazyLoad from 'react-lazyload';\r\nimport styled from 'styled-components';\r\n\r\nconst GameDetails = styled.div`\r\n  font-size: calc(14px + 1vmin);\r\n  line-height: calc(25px + 1vmin);\r\n`;\r\n\r\nconst ActiveGameDetails = styled.div`\r\n  background-color: #444853;\r\n`;\r\n\r\nconst Card = (props) => {\r\n  let gameHeader =\r\n    <Row>\r\n      <LeftText>\r\n        <Header>{props.hTeam.fullName}</Header>\r\n      </LeftText>\r\n      <Separator>vs</Separator>\r\n      <RightText>\r\n        <Header>{props.vTeam.fullName}</Header>\r\n      </RightText>\r\n    </Row>\r\n\r\n  let gameDetails = (props.isEnded || props.isActiveGame) ?\r\n    <div>\r\n      <Row>\r\n        <LeftText>\r\n          <Header>{props.hTeam.score}</Header>\r\n        </LeftText>\r\n        <Separator>-</Separator>\r\n        <RightText>\r\n          <Header>{props.vTeam.score}</Header>\r\n        </RightText>\r\n      </Row>\r\n      <Row>\r\n        <LeftText>\r\n          <FurtherDetails>{props.hTeam.seriesWin}</FurtherDetails>\r\n        </LeftText>\r\n        <Separator>-</Separator>\r\n        <RightText>\r\n          <FurtherDetails>{props.vTeam.seriesWin}</FurtherDetails>\r\n        </RightText>\r\n      </Row>\r\n    </div>\r\n    :\r\n    <div>\r\n      <GameDetails>{((!props.startTimeTBD) ? props.time : 'TBD')}</GameDetails>\r\n      <FurtherDetails>{props.arena}</FurtherDetails>\r\n    </div>\r\n\r\n  return (\r\n    <LazyLoad once>\r\n      <StyledCard>\r\n        {gameHeader}\r\n        {gameDetails}\r\n        {props.isActiveGame && props.period && props.clock &&\r\n          <ActiveGameDetails>{`${props.period} - ${props.clock}`}</ActiveGameDetails>\r\n        }\r\n      </StyledCard>\r\n    </LazyLoad>\r\n  );\r\n}\r\n\r\nexport default Card;","export const SET_DATE = \"SET_DATE\"\r\nexport const SET_GAMES = \"SET_GAMES\"\r\nexport const SET_LOADING = \"SET_LOADING\"\r\n\r\nexport function setLoading(payload) {\r\n    return { type: \"SET_LOADING\", payload }\r\n};\r\n\r\nexport function setDate(payload) {\r\n    return { type: \"SET_DATE\", payload }\r\n};\r\n\r\nexport function setGames(payload) {\r\n    return { type: \"SET_GAMES\", payload }\r\n};","import { SET_DATE, SET_GAMES, SET_LOADING, setGames, setLoading } from \"../actions/games\";\r\nimport { getGamesForDay } from \"../../API\";\r\n\r\nconst initialState = {\r\n  date: new Date(),\r\n  games: [],\r\n  loading: false\r\n};\r\n\r\nexport function gamesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_DATE:\r\n      return { ...state, date: action.payload }\r\n    case SET_GAMES:\r\n      return { ...state, games: action.payload, loading: false }\r\n    case SET_LOADING:\r\n      return { ...state, loading: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport const loadGames = () => async (dispatch, getState) => {\r\n  dispatch(setLoading(true))\r\n  const games = await getGamesForDay(getState().games.date.toISOString().split('T')[0].replace(/-/g, \"\"))\r\n  dispatch(setGames(games))\r\n}","import React, { useEffect } from 'react';\r\nimport DateNav from \"../components/DateNav\"\r\nimport Card from \"../components/GameCard\"\r\nimport { Spinner, Page, PageTitle, Container, Message } from '../components/StyledComponents';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { loadGames } from '../store/reducers/games';\r\nimport { setDate } from '../store/actions/games'\r\n\r\nconst Games = () => {\r\n    const games = useSelector(state => state.games.games);\r\n    const loading = useSelector(state => state.games.loading);\r\n    const date = useSelector(state => state.games.date);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadGames())\r\n    }, [date]);\r\n\r\n    const changeDate = (newDate) => {\r\n        if (!isNaN(Date.parse(newDate)) && newDate.toString() !== date.toString()) {\r\n            dispatch(setDate(newDate))\r\n        }\r\n    }\r\n    const increaseOrDecreaseDate = (dayDifference) => {\r\n        const newDate = new Date(Number(date))\r\n        newDate.setDate(date.getDate() + dayDifference)\r\n        dispatch(setDate(newDate))\r\n    }\r\n\r\n    let content = (\r\n        <Container>\r\n            {games.map(game =>\r\n                <Card\r\n                    {...game}\r\n                />\r\n            )}\r\n        </Container>\r\n    )\r\n    \r\n    return (\r\n        <Page>\r\n            <PageTitle>NBA Games</PageTitle>\r\n            <DateNav\r\n                onChange={changeDate}\r\n                onArrowsClick={increaseOrDecreaseDate}\r\n                date={date}\r\n                disabled={loading}\r\n            />\r\n            {loading && <Spinner type=\"Circles\" color=\"white\" />}\r\n            {!loading && games.length == 0 && <Message> No Game Found :(</Message>}\r\n            {!loading && content}\r\n        </Page>\r\n    )\r\n}\r\nexport default Games;","import { statsReducer } from './reducers/stats'\r\nimport { gamesReducer } from './reducers/games'\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n  games: gamesReducer,\r\n  stats: statsReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nexport default store","import React from 'react';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux'\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport Navbar from './components/Navbar';\r\nimport Stats from './pages/Stats';\r\nimport Games from \"./pages/Games\"\r\nimport store from './store/store'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Navbar />\r\n        <Switch >\r\n          <Route exact path=\"/\" component={Games} />\r\n          <Route exact path=\"/stats\" component={Stats} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}